{"version":3,"file":"static/js/135.80422167.chunk.js","mappings":"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","sources":["components/AddRecipeForm/images/fileInputImage.svg","webpack://so_yummy/./src/components/AddRecipeForm/AddRecipeForm.module.scss?2649","components/AddRecipeForm/TextField/index.jsx","components/AddRecipeForm/AddRecipeButton/index.js","components/AddRecipeForm/FileInputField/FileInputField.jsx","components/AddRecipeForm/images/dropDownIcon.svg","components/AddRecipeForm/Select/index.jsx","components/AddRecipeForm/RecipeDescriptionFields/RecipeDescriptionFields.jsx","components/AddRecipeForm/AddRecipeForm.jsx","pages/AddRecipe.jsx"],"sourcesContent":["var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgFileInputImage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 64,\n    height: 64,\n    viewBox: \"0 0 64 64\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.381 22.8571V13.696C56.3811 12.0826 55.7414 10.535 54.6023 9.39244C53.4631 8.24988 51.9175 7.60557 50.3041 7.60073L41.143 7.5733M56.381 41.1428V50.2857C56.381 51.9022 55.7389 53.4526 54.5958 54.5957C53.4527 55.7387 51.9024 56.3809 50.2858 56.3809H41.143M22.8572 7.5733L13.6961 7.60378C12.0827 7.60862 10.5371 8.25293 9.39792 9.39549C8.2588 10.538 7.61913 12.0856 7.61914 13.699V22.8571M22.8572 56.3809H13.7144C12.0978 56.3809 10.5475 55.7387 9.40439 54.5957C8.26132 53.4526 7.61914 51.9022 7.61914 50.2857V41.1428\",\n    stroke: \"#FAFAFA\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 37.5C33.25 37.5 34.3127 37.0627 35.188 36.188C36.0627 35.3127 36.5 34.25 36.5 33C36.5 31.75 36.0627 30.6873 35.188 29.812C34.3127 28.9373 33.25 28.5 32 28.5C30.75 28.5 29.6873 28.9373 28.812 29.812C27.9373 30.6873 27.5 31.75 27.5 33C27.5 34.25 27.9373 35.3127 28.812 36.188C29.6873 37.0627 30.75 37.5 32 37.5ZM24 41C23.45 41 22.9793 40.8043 22.588 40.413C22.196 40.021 22 39.55 22 39V27C22 26.45 22.196 25.9793 22.588 25.588C22.9793 25.196 23.45 25 24 25H27.15L29 23H35L36.85 25H40C40.55 25 41.021 25.196 41.413 25.588C41.8043 25.9793 42 26.45 42 27V39C42 39.55 41.8043 40.021 41.413 40.413C41.021 40.8043 40.55 41 40 41H24Z\",\n    fill: \"#FAFAFA\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFileInputImage);\nexport default __webpack_public_path__ + \"static/media/fileInputImage.64fb944f2bd998a99c7c9f5cf8ab6110.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"addRecipeForm\":\"AddRecipeForm_addRecipeForm__KeVKW\",\"selectLabel\":\"AddRecipeForm_selectLabel__ky87d\",\"addRecipeInput\":\"AddRecipeForm_addRecipeInput__RvqEa\",\"categorySelect\":\"AddRecipeForm_categorySelect__yzQMt\"};","import React from 'react';\nimport { TextField, styled } from '@mui/material';\nimport { useField } from 'formik';\n\nconst AddRecipeTextField = styled(TextField)(({ theme, error }) => ({\n  borderBottom: `1px solid ${error ? 'red' : '#E0E0E0'}`,\n  '& .MuiOutlinedInput-root': {\n    '& input': {\n      paddingLeft: 0,\n    },\n    '& fieldset': {\n      paddingLeft: 0,\n    },\n  },\n  '& .MuiOutlinedInput-notchedOutline': {\n    outline: 'none',\n    border: 'none',\n  },\n  '& .MuiFormHelperText-root': {\n    position: 'absolute',\n    bottom: '-20px',\n  },\n  '& .MuiPopover-paper': {\n    width: '122px',\n  },\n}));\n\nconst TextfieldWrapper = ({ name, ...otherProps }) => {\n  const [field, meta] = useField(name);\n\n  const configTextField = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n\n  if (meta && meta.touched && meta.error) {\n    configTextField.error = true;\n    configTextField.helperText = meta.error;\n  }\n\n  return <AddRecipeTextField {...configTextField} />;\n};\n\nexport default TextfieldWrapper;\n","import React from 'react';\nimport { Button } from '@mui/material';\nimport { useFormikContext } from 'formik';\n\nconst ButtonWrapper = ({ children, ...otherProps }) => {\n  const { submitForm } = useFormikContext();\n\n  const handleSubmit = () => {\n    submitForm();\n  };\n\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit,\n  };\n\n  return <Button {...configButton}>{children}</Button>;\n};\n\nexport default ButtonWrapper;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { useField } from 'formik';\nimport { ReactComponent as FileInputImage } from '../images/fileInputImage.svg';\n\nconst validFileExtensions = {\n  image: ['jpg', 'png', 'jpeg', 'webp'],\n};\nconst MAX_FILE_SIZE = 700 * 1024;\n\nfunction isValidFileType(fileName, fileType) {\n  return (\n    fileName &&\n    validFileExtensions[fileType].indexOf(fileName.split('.').pop()) > -1\n  );\n}\n\nexport const FileInputField = ({ name, reset }) => {\n  const [imageUrl, setImageUrl] = useState(null);\n  const [, meta, helpers] = useField(name);\n  const fileInputRef = useRef(null);\n\n  const validateFile = file => {\n    if (!file) {\n      return 'Please select a file';\n    }\n\n    if (file.size > MAX_FILE_SIZE) {\n      return 'File size exceeds the maximum limit';\n    }\n\n    if (!isValidFileType(file.name.toLowerCase(), 'image')) {\n      return 'Invalid file format';\n    }\n\n    return undefined;\n  };\n\n  const handleFileInputChange = event => {\n    const file = event.currentTarget.files[0];\n    helpers.setValue(file);\n\n    const errorMessage = validateFile(file);\n    helpers.setError(errorMessage);\n    helpers.setTouched(true);\n\n    if (!errorMessage) {\n      helpers.setTouched(false);\n      const reader = new FileReader();\n      reader.onload = e => {\n        setImageUrl(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setImageUrl(null);\n    }\n\n    if (errorMessage) {\n      setTimeout(() => {\n        helpers.setTouched(true);\n      }, 0);\n    }\n  };\n\n  const handleClick = () => {\n    fileInputRef.current.click();\n  };\n\n  useEffect(() => {\n    if (reset) {\n      setImageUrl(null);\n    }\n  }, [reset]);\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div\n        style={{\n          width: '279px',\n          height: '268px',\n          backgroundColor: '#8BAA36',\n          cursor: 'pointer',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '8px',\n        }}\n        onClick={handleClick}\n      >\n        {imageUrl ? (\n          <img\n            src={imageUrl}\n            alt=\"recipe\"\n            style={{ maxWidth: '100%', maxHeight: '100%' }}\n          />\n        ) : (\n          <FileInputImage width=\"64px\" height=\"64px\" />\n        )}\n        <input\n          type=\"file\"\n          id={name}\n          name={name}\n          ref={fileInputRef}\n          style={{ display: 'none' }}\n          onChange={handleFileInputChange}\n        />\n      </div>\n      {meta.touched && meta.error ? (\n        <div\n          style={{\n            color: '#d32f2f',\n            fontSize: '0.75rem',\n            fontWeight: '400',\n            lineHeight: '1.66',\n\n            position: 'absolute',\n            bottom: '-18px',\n          }}\n        >\n          {meta.error}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropDownIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11 1L6 6L1 1\",\n    stroke: \"#8BAA36\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropDownIcon);\nexport default __webpack_public_path__ + \"static/media/dropDownIcon.bfa89af93715e17c4b279c05d6a17e4d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Select, MenuItem, styled, Box } from '@mui/material';\nimport { useField, useFormikContext } from 'formik';\nimport { ReactComponent as DropDownIcon } from '../images/dropDownIcon.svg';\n\nconst AddRecipeSelect = styled(Select)(({ theme, error }) => ({\n  paddingTop: '16.5px',\n  paddingBottom: '16.5px',\n  textAlign: 'end',\n  width: '160px',\n  '& .MuiSelect-icon': { top: 'calc(55% - 0.5em)' },\n  '&::before': {\n    content: '\"\"',\n    left: '-183px',\n    opacity: '0.3',\n  },\n}));\n\nconst SelectWrapper = ({ name, options, label, text, ...otherProps }) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setFieldValue(name, value);\n  };\n\n  const configSelect = {\n    ...field,\n    ...otherProps,\n    variant: 'standard',\n    onChange: handleChange,\n    IconComponent: DropDownIcon,\n    MenuProps: {\n      PaperProps: {\n        style: {\n          maxHeight: '220px',\n          width: '155px',\n        },\n      },\n    },\n  };\n\n  if (meta && meta.touched && meta.error) {\n    configSelect.error = true;\n    // configSelect.helperText = meta.error;\n  }\n\n  return (\n    <Box position=\"relative\">\n      <AddRecipeSelect label={label} {...configSelect}>\n        {Object.keys(options).map((item, position) => {\n          return (\n            <MenuItem key={position} value={item}>\n              {options[item]}\n            </MenuItem>\n          );\n        })}\n      </AddRecipeSelect>\n      <div\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '-183px',\n          transform: 'translateY(-50%)',\n          opacity: '0.5',\n        }}\n      >\n        <span style={{ textAlign: 'end' }}>{label}</span>\n      </div>\n    </Box>\n  );\n};\n\nexport default SelectWrapper;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport CustomTextField from '../TextField';\nimport { FileInputField } from '../FileInputField';\nimport Select from '../Select';\n\nexport const RecipeDescriptionFields = ({\n  isFormSubmitted,\n  categories,\n  cookingTime,\n}) => {\n  return (\n    <>\n      <FileInputField name=\"file\" reset={isFormSubmitted} />\n\n      <CustomTextField name=\"title\" placeholder=\"Enter item title\" />\n\n      <CustomTextField name=\"about\" placeholder=\"Enter about recipe\" />\n\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"flex-end\"\n        width=\"100%\"\n      >\n        <Select name=\"category\" label=\"Category\" options={categories} />\n\n        <Select name=\"cookingTime\" label=\"Cooking time\" options={cookingTime} />\n      </Box>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Typography } from '@mui/material';\nimport { Form, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport styles from './AddRecipeForm.module.scss';\nimport CustomTextField from './TextField';\nimport Button from './AddRecipeButton';\nimport categories from './data/categories.json';\nimport cookingTime from './data/cookingTime.json';\nimport { RecipeDescriptionFields } from './RecipeDescriptionFields';\n\nconst MAX_FILE_SIZE = 700 * 1024;\n\nconst initialValues = {\n  title: '',\n  about: '',\n  category: 'breakfast',\n  cookingTime: '40 min',\n  recipe: '',\n  file: '',\n};\n\nconst validFileExtensions = {\n  image: ['jpg', 'png', 'jpeg', 'webp'],\n};\n\nfunction isValidFileType(fileName, fileType) {\n  return (\n    fileName &&\n    validFileExtensions[fileType].indexOf(fileName.split('.').pop()) > -1\n  );\n}\n\nconst FORM_VALIDATION = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n  about: Yup.string().required('About is required'),\n  category: Yup.string().required('Category is required'),\n  cookingTime: Yup.string().required('Cooking time is required'),\n  recipe: Yup.string().required('Recipe is required'),\n  file: Yup.mixed()\n    .test('is-valid-file', 'Invalid file format', function (value) {\n      if (!value) {\n        return true;\n      }\n      return isValidFileType(value && value.name.toLowerCase(), 'image');\n    })\n    .test(\n      'is-valid-size',\n      'File size exceeds the maximum limit',\n      function (value) {\n        if (!value) {\n          return true;\n        }\n        return value.size <= MAX_FILE_SIZE;\n      }\n    )\n    .required('Image is required'),\n});\n\nexport const AddRecipeForm = () => {\n  const [isFormSubmitted, setFormSubmitted] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const file = values.file;\n    const errorMessage = validateFile(file);\n    if (!errorMessage) {\n      console.log(values);\n      setFormSubmitted(true);\n      resetForm();\n    }\n  };\n\n  const validateFile = file => {\n    if (!file) {\n      return 'Please select a file';\n    }\n\n    if (file.size > MAX_FILE_SIZE) {\n      return 'File size exceeds the maximum limit';\n    }\n\n    if (!isValidFileType(file.name.toLowerCase(), 'image')) {\n      return 'Invalid file format';\n    }\n\n    return undefined;\n  };\n\n  return (\n    <div className={styles.addRecipeForm}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FORM_VALIDATION}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <div className={styles.addRecipeForm}>\n            <Typography>Add recipe</Typography>\n\n            <RecipeDescriptionFields\n              isFormSubmitted={isFormSubmitted}\n              categories={categories}\n              cookingTime={cookingTime}\n            />\n            <CustomTextField\n              name=\"recipe\"\n              placeholder=\"Enter recipe\"\n              multiline={true}\n              rows={4}\n            />\n            <Button type=\"submit\">Submit</Button>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import React from 'react';\nimport { AddRecipeForm } from 'components/AddRecipeForm/AddRecipeForm';\n\nconst AddRecipe = () => {\n  return <AddRecipeForm />;\n};\n\nexport default AddRecipe;\n"],"names":["_path","_path2","AddRecipeTextField","styled","TextField","theme","error","borderBottom","paddingLeft","outline","border","position","bottom","width","name","otherProps","useField","field","meta","configTextField","fullWidth","variant","touched","helperText","children","submitForm","useFormikContext","configButton","color","onClick","Button","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgFileInputImage","_ref","svgRef","title","titleId","props","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeLinecap","strokeLinejoin","ForwardRef","validFileExtensions","image","FileInputField","reset","useState","imageUrl","setImageUrl","helpers","fileInputRef","useRef","validateFile","file","size","fileName","toLowerCase","fileType","split","pop","useEffect","style","backgroundColor","cursor","display","justifyContent","alignItems","borderRadius","current","click","src","alt","maxWidth","maxHeight","type","onChange","event","currentTarget","files","setValue","errorMessage","setError","setTouched","reader","FileReader","onload","e","result","readAsDataURL","setTimeout","fontSize","fontWeight","lineHeight","SvgDropDownIcon","strokeWidth","AddRecipeSelect","Select","paddingTop","paddingBottom","textAlign","top","content","left","opacity","options","label","text","setFieldValue","configSelect","value","IconComponent","DropDownIcon","MenuProps","PaperProps","Box","map","item","MenuItem","transform","RecipeDescriptionFields","isFormSubmitted","categories","cookingTime","placeholder","flexDirection","MAX_FILE_SIZE","initialValues","about","category","recipe","isValidFileType","FORM_VALIDATION","Yup","shape","required","test","AddRecipeForm","setFormSubmitted","className","styles","validationSchema","onSubmit","values","resetForm","console","log","Typography","multiline","rows"],"sourceRoot":""}